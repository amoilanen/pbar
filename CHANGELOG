05/01/2011

- Removed the unnecessary 'test' task from Rakefile as echoe already includes it
- Removing tabulation from the source files
- Submitting the Eclipse project settings (Eclipse DLTK is used for development)
- Renaming the classes and the module to reflect their purposes in a clearer way
- Splitting the class Progress so that it has a single responsibility: computing the current status
- Support for adding multiple listeners to Progress
- Written tests for ConsoleReporter, StatusRenderer was extracted from it

05/14/2011

- Split up the test progress_bar_test.rb into several tests to improve maintainability
- Made showing of speed in ConsoleReporter optional
- Speed calculation is now done in status instead of progress, small re-factoring and re-design
- Using 'flexmock' to mock out dependencies in tests where it makes sense

TODO:

- Synchronization support so that the progress can be updated and rendered from multiple threads of execution

- Make the classes use some Ruby specific features in order for them to look less Java-like
- Usability for the client code: shortcuts and syntactic sugar. At the moment too many classes should be constructed
and the API is too low level

- Make ConsoleReporter report on Windows
- Think about managing dependencies for a gem. Maybe a separate .gemspec file is needed if echoe
does not work well with dependencies? To be investigated
- Write an rDoc file